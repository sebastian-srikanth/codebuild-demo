version: 0.2

phases:
  install:
      runtime-versions:
        python: 3.7
      commands:
        - pip3 install pytest-cov
        - pip3 install pytest-pylint
  pre_build:
    commands:
      - echo setting up env variables
      - . ./env
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Check standards of Coding
      - 'pytest --junit-xml=reports/pytest_report.xml test' 
      - 'pytest --junit-xml=reports/pylint_report.xml --pylint --pylint-error-types=RWEF ./scripts || true'
      - 'pytest --cov-report=xml:reports/coverage_report.xml --cov=./scripts test || true'  
    finally:
      - echo Check report
      - coverage report --fail-under=100
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo build status completed

reports:
  pytest-report-group:
    files:
      - "pytest_report.xml"
    base-directory: reports
    file-format: JunitXml
  pylint-report-group:
    files:
      - "pylint_report.xml"
    base-directory: reports
    file-format: JunitXml
  coverage-report-group:
    files:
      - "coverage_report.xml"
    base-directory: reports
    file-format: COBERTURAXML
